microsoft teams 
	username:sudharaka.25500@stpetersedu.lk
	password: B03d1127



STUDY PLAN WEB DEVELOPMENT

### **Phase 1: Introduction to Web Development**
**Timeframe: 2-4 weeks**

1. **HTML (1 week):** Start with the basics of HTML, which is the foundation of web development.
   - Recommended YouTube Video: [HTML Full Course - Build a Website Tutorial]
		(https://www.youtube.com/watch?v=pQN-pnXPaVg)
   - Hands-on Exercise: Create a personal webpage with HTML.

2. **CSS (1 week):** Learn how to style your HTML pages using CSS.
   - Recommended YouTube Video: [CSS Crash Course For Absolute Beginners]
		(https://www.youtube.com/watch?v=yfoY53QXEnI)
   - Hands-on Exercise: Style your personal webpage with CSS.

3. **Basic JavaScript (2 weeks):** Get started with JavaScript for interactivity.
   - Recommended YouTube Video: [JavaScript Crash Course For Beginners]
		(https://www.youtube.com/watch?v=hdI2bqOjy3c)
   - Hands-on Exercise: Create a simple interactive webpage.

### **Phase 2: Front-End Development**
**Timeframe: 6-8 weeks**

4. **Responsive Web Design (2 weeks):** Learn how to make your websites responsive using CSS.
   - Recommended YouTube Video: [Responsive Web Design Tutorial for Beginners]
		(https://www.youtube.com/watch?v=68O6eOGAGqA)
   - Hands-on Exercise: Convert a webpage into a responsive design.

5. **Advanced CSS (2 weeks):** Dive deeper into CSS with Flexbox and Grid.
   - Recommended YouTube Video: [Flexbox CSS In 20 Minutes]
		(https://www.youtube.com/watch?v=JJSoEo8JSnc) 
	and [CSS Grid Tutorial]
		(https://www.youtube.com/watch?v=t6CBKf8K_Ac)
   - Hands-on Exercise: Create complex layouts with Flexbox and Grid.

6. **JavaScript ES6+ (2 weeks):** Explore more advanced JavaScript concepts.
   - Recommended YouTube Video: [JavaScript ES6+ In-Depth Tutorial]
		(https://www.youtube.com/watch?v=3SpAg5tr7Ws)
   - Hands-on Exercise: Build a small interactive project like a to-do list app.

### **Phase 3: Back-End Development**
**Timeframe: 8-10 weeks**

7. **Introduction to Back-End (2 weeks):** Understand what back-end development is and how it works.
   - Recommended YouTube Video: [What is Back-End Development?]
		(https://www.youtube.com/watch?v=ARdMNBmKm6I)

8. **Node.js and Express.js (4 weeks):** Start building the server-side of web applications.
   - Recommended YouTube Video: [Node.js Crash Course]
		(https://www.youtube.com/watch?v=fBNz5xF-Kx4) 
	and [Express.js Crash Course]
		(https://www.youtube.com/watch?v=L72fhGm1tfE)
   - Hands-on Exercise: Create a basic server and API with Node.js and Express.js.

9. **Databases (2 weeks):** Learn about databases, SQL, and NoSQL.
   - Recommended YouTube Video: [SQL vs NoSQL or MySQL vs MongoDB]
		(https://www.youtube.com/watch?v=ZS_kXvOeQ5Y)
   - Hands-on Exercise: Set up a simple database and interact with it.

### **Phase 4: Full-Stack Development**
**Timeframe: 6-8 weeks**

10. **Front-End Frameworks (4 weeks):** Dive into popular front-end frameworks like React.js.
    - Recommended YouTube Video: [React JS Crash Course]
		(https://www.youtube.com/watch?v=w7ejDZ8SWv8)
    - Hands-on Exercise: Build a single-page application with React.js.

11. **Back-End Frameworks (2 weeks):** Explore back-end frameworks like Express.js or Django.
    - Recommended YouTube Video: [Django Crash Course]
		(https://www.youtube.com/watch?v=UmljXZIypDc) (for Django) 
	or [Express.js Crash Course]
		(https://www.youtube.com/watch?v=fBNz5xF-Kx4) (for Express.js)
    - Hands-on Exercise: Create a project using the chosen back-end framework.

### **Phase 5: Deployment and Advanced Topics**
**Timeframe: 4-6 weeks**

12. **Version Control (2 weeks):** Learn Git and GitHub for version control.
    - Recommended YouTube Video: [Git & GitHub Crash Course For Beginners]
		(https://www.youtube.com/watch?v=SWYqp7iY_Tc)
    - Hands-on Exercise: Collaborate on a project using Git/GitHub.

13. **Deployment and Hosting (2 weeks):** Deploy your web applications online.
    - Recommended YouTube Video: [Deploying a Web App - Best Practices]
		(https://www.youtube.com/watch?v=Hx3fO3Cx2Og)
    - Hands-on Exercise: Deploy one of your projects to a hosting service like Netlify or Heroku.

14. **Advanced Topics (2 weeks):** Explore topics like authentication, security, and performance optimization.
    - Recommended YouTube Video: [Web Security Basics]
		(https://www.youtube.com/watch?v=hkQlhKOma6I) 
	and [Web Performance Optimization]
		(https://www.youtube.com/watch?v=7kVeCqQCxlk)

### **Phase 6: Capstone Project**
**Timeframe: 4-6 weeks**

15. **Capstone Project (4-6 weeks):** Apply everything you've learned by building a complex web application.
    - This project should incorporate front-end, back-end, and databases.
    - Recommended YouTube Video: None specific; choose resources based on your project's requirements.
    - Hands-on Exercise: Build a substantial project that showcases your skills.

























